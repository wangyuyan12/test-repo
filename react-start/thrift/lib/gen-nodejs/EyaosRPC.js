"use strict";
//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var exception_ttypes = require('./exception_types')


var ttypes = require('./index_types');
//HELPER FUNCTIONS AND STRUCTURES

var EyaosRPC_get_login_status_args = function(args) {
  this.session_id = null;
  if (args) {
    if (args.session_id !== undefined) {
      this.session_id = args.session_id;
    }
  }
};
EyaosRPC_get_login_status_args.prototype = {};
EyaosRPC_get_login_status_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.session_id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_login_status_args.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_login_status_args');
  if (this.session_id !== null && this.session_id !== undefined) {
    output.writeFieldBegin('session_id', Thrift.Type.STRING, 1);
    output.writeString(this.session_id);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_login_status_result = function(args) {
  this.success = null;
  this.error = null;
  if (args instanceof exception_ttypes.EyaosRpcError) {
    this.error = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.error !== undefined) {
      this.error = args.error;
    }
  }
};
EyaosRPC_get_login_status_result.prototype = {};
EyaosRPC_get_login_status_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.LoginStatus();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.error = new exception_ttypes.EyaosRpcError();
        this.error.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_login_status_result.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_login_status_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.error !== null && this.error !== undefined) {
    output.writeFieldBegin('error', Thrift.Type.STRUCT, 1);
    this.error.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_home_banners_args = function(args) {
  this.num = null;
  if (args) {
    if (args.num !== undefined) {
      this.num = args.num;
    }
  }
};
EyaosRPC_get_home_banners_args.prototype = {};
EyaosRPC_get_home_banners_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I16) {
        this.num = input.readI16();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_home_banners_args.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_home_banners_args');
  if (this.num !== null && this.num !== undefined) {
    output.writeFieldBegin('num', Thrift.Type.I16, 1);
    output.writeI16(this.num);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_home_banners_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EyaosRPC_get_home_banners_result.prototype = {};
EyaosRPC_get_home_banners_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.success = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new ttypes.HomeBanner();
          elem14.read(input);
          this.success.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_home_banners_result.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_home_banners_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter15 in this.success)
    {
      if (this.success.hasOwnProperty(iter15))
      {
        iter15 = this.success[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_new_skus_args = function(args) {
  this.num = null;
  if (args) {
    if (args.num !== undefined) {
      this.num = args.num;
    }
  }
};
EyaosRPC_get_new_skus_args.prototype = {};
EyaosRPC_get_new_skus_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I16) {
        this.num = input.readI16();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_new_skus_args.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_new_skus_args');
  if (this.num !== null && this.num !== undefined) {
    output.writeFieldBegin('num', Thrift.Type.I16, 1);
    output.writeI16(this.num);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_new_skus_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EyaosRPC_get_new_skus_result.prototype = {};
EyaosRPC_get_new_skus_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.success = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = new ttypes.NewSku();
          elem22.read(input);
          this.success.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_new_skus_result.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_new_skus_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter23 in this.success)
    {
      if (this.success.hasOwnProperty(iter23))
      {
        iter23 = this.success[iter23];
        iter23.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_proxy_infos_args = function(args) {
  this.num = null;
  if (args) {
    if (args.num !== undefined) {
      this.num = args.num;
    }
  }
};
EyaosRPC_get_proxy_infos_args.prototype = {};
EyaosRPC_get_proxy_infos_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I16) {
        this.num = input.readI16();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_proxy_infos_args.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_proxy_infos_args');
  if (this.num !== null && this.num !== undefined) {
    output.writeFieldBegin('num', Thrift.Type.I16, 1);
    output.writeI16(this.num);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_proxy_infos_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EyaosRPC_get_proxy_infos_result.prototype = {};
EyaosRPC_get_proxy_infos_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size24 = 0;
        var _rtmp328;
        this.success = [];
        var _etype27 = 0;
        _rtmp328 = input.readListBegin();
        _etype27 = _rtmp328.etype;
        _size24 = _rtmp328.size;
        for (var _i29 = 0; _i29 < _size24; ++_i29)
        {
          var elem30 = null;
          elem30 = new ttypes.ProxyInfo();
          elem30.read(input);
          this.success.push(elem30);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_proxy_infos_result.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_proxy_infos_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter31 in this.success)
    {
      if (this.success.hasOwnProperty(iter31))
      {
        iter31 = this.success[iter31];
        iter31.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_good_enterprises_args = function(args) {
  this.num = null;
  if (args) {
    if (args.num !== undefined) {
      this.num = args.num;
    }
  }
};
EyaosRPC_get_good_enterprises_args.prototype = {};
EyaosRPC_get_good_enterprises_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I16) {
        this.num = input.readI16();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_good_enterprises_args.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_good_enterprises_args');
  if (this.num !== null && this.num !== undefined) {
    output.writeFieldBegin('num', Thrift.Type.I16, 1);
    output.writeI16(this.num);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_good_enterprises_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EyaosRPC_get_good_enterprises_result.prototype = {};
EyaosRPC_get_good_enterprises_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size32 = 0;
        var _rtmp336;
        this.success = [];
        var _etype35 = 0;
        _rtmp336 = input.readListBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          elem38 = new ttypes.GoodEnterperise();
          elem38.read(input);
          this.success.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_good_enterprises_result.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_good_enterprises_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter39 in this.success)
    {
      if (this.success.hasOwnProperty(iter39))
      {
        iter39 = this.success[iter39];
        iter39.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_medical_messages_args = function(args) {
  this.num = null;
  if (args) {
    if (args.num !== undefined) {
      this.num = args.num;
    }
  }
};
EyaosRPC_get_medical_messages_args.prototype = {};
EyaosRPC_get_medical_messages_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I16) {
        this.num = input.readI16();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_medical_messages_args.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_medical_messages_args');
  if (this.num !== null && this.num !== undefined) {
    output.writeFieldBegin('num', Thrift.Type.I16, 1);
    output.writeI16(this.num);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_medical_messages_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EyaosRPC_get_medical_messages_result.prototype = {};
EyaosRPC_get_medical_messages_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size40 = 0;
        var _rtmp344;
        this.success = [];
        var _etype43 = 0;
        _rtmp344 = input.readListBegin();
        _etype43 = _rtmp344.etype;
        _size40 = _rtmp344.size;
        for (var _i45 = 0; _i45 < _size40; ++_i45)
        {
          var elem46 = null;
          elem46 = new ttypes.MedicalMessage();
          elem46.read(input);
          this.success.push(elem46);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_medical_messages_result.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_medical_messages_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter47 in this.success)
    {
      if (this.success.hasOwnProperty(iter47))
      {
        iter47 = this.success[iter47];
        iter47.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_hiring_infos_args = function(args) {
  this.num = null;
  if (args) {
    if (args.num !== undefined) {
      this.num = args.num;
    }
  }
};
EyaosRPC_get_hiring_infos_args.prototype = {};
EyaosRPC_get_hiring_infos_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I16) {
        this.num = input.readI16();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_hiring_infos_args.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_hiring_infos_args');
  if (this.num !== null && this.num !== undefined) {
    output.writeFieldBegin('num', Thrift.Type.I16, 1);
    output.writeI16(this.num);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPC_get_hiring_infos_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
EyaosRPC_get_hiring_infos_result.prototype = {};
EyaosRPC_get_hiring_infos_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size48 = 0;
        var _rtmp352;
        this.success = [];
        var _etype51 = 0;
        _rtmp352 = input.readListBegin();
        _etype51 = _rtmp352.etype;
        _size48 = _rtmp352.size;
        for (var _i53 = 0; _i53 < _size48; ++_i53)
        {
          var elem54 = null;
          elem54 = new ttypes.HiringInfo();
          elem54.read(input);
          this.success.push(elem54);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

EyaosRPC_get_hiring_infos_result.prototype.write = function(output) {
  output.writeStructBegin('EyaosRPC_get_hiring_infos_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter55 in this.success)
    {
      if (this.success.hasOwnProperty(iter55))
      {
        iter55 = this.success[iter55];
        iter55.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var EyaosRPCClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this.seqid = 0;
    this._reqs = {};
};
EyaosRPCClient.prototype = {};
EyaosRPCClient.prototype.get_login_status = function(session_id, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_get_login_status(session_id);
};

EyaosRPCClient.prototype.send_get_login_status = function(session_id) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('get_login_status', Thrift.MessageType.CALL, this.seqid);
  var args = new EyaosRPC_get_login_status_args();
  args.session_id = session_id;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EyaosRPCClient.prototype.recv_get_login_status = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EyaosRPC_get_login_status_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.error) {
    return callback(result.error);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('get_login_status failed: unknown result');
};
EyaosRPCClient.prototype.get_home_banners = function(num, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_get_home_banners(num);
};

EyaosRPCClient.prototype.send_get_home_banners = function(num) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('get_home_banners', Thrift.MessageType.CALL, this.seqid);
  var args = new EyaosRPC_get_home_banners_args();
  args.num = num;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EyaosRPCClient.prototype.recv_get_home_banners = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EyaosRPC_get_home_banners_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('get_home_banners failed: unknown result');
};
EyaosRPCClient.prototype.get_new_skus = function(num, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_get_new_skus(num);
};

EyaosRPCClient.prototype.send_get_new_skus = function(num) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('get_new_skus', Thrift.MessageType.CALL, this.seqid);
  var args = new EyaosRPC_get_new_skus_args();
  args.num = num;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EyaosRPCClient.prototype.recv_get_new_skus = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EyaosRPC_get_new_skus_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('get_new_skus failed: unknown result');
};
EyaosRPCClient.prototype.get_proxy_infos = function(num, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_get_proxy_infos(num);
};

EyaosRPCClient.prototype.send_get_proxy_infos = function(num) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('get_proxy_infos', Thrift.MessageType.CALL, this.seqid);
  var args = new EyaosRPC_get_proxy_infos_args();
  args.num = num;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EyaosRPCClient.prototype.recv_get_proxy_infos = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EyaosRPC_get_proxy_infos_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('get_proxy_infos failed: unknown result');
};
EyaosRPCClient.prototype.get_good_enterprises = function(num, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_get_good_enterprises(num);
};

EyaosRPCClient.prototype.send_get_good_enterprises = function(num) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('get_good_enterprises', Thrift.MessageType.CALL, this.seqid);
  var args = new EyaosRPC_get_good_enterprises_args();
  args.num = num;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EyaosRPCClient.prototype.recv_get_good_enterprises = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EyaosRPC_get_good_enterprises_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('get_good_enterprises failed: unknown result');
};
EyaosRPCClient.prototype.get_medical_messages = function(num, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_get_medical_messages(num);
};

EyaosRPCClient.prototype.send_get_medical_messages = function(num) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('get_medical_messages', Thrift.MessageType.CALL, this.seqid);
  var args = new EyaosRPC_get_medical_messages_args();
  args.num = num;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EyaosRPCClient.prototype.recv_get_medical_messages = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EyaosRPC_get_medical_messages_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('get_medical_messages failed: unknown result');
};
EyaosRPCClient.prototype.get_hiring_infos = function(num, callback) {
  this.seqid += 1;
  this._reqs[this.seqid] = callback;
  this.send_get_hiring_infos(num);
};

EyaosRPCClient.prototype.send_get_hiring_infos = function(num) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('get_hiring_infos', Thrift.MessageType.CALL, this.seqid);
  var args = new EyaosRPC_get_hiring_infos_args();
  args.num = num;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

EyaosRPCClient.prototype.recv_get_hiring_infos = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new EyaosRPC_get_hiring_infos_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('get_hiring_infos failed: unknown result');
};
var EyaosRPCProcessor = exports.Processor = function(handler) {
  this._handler = handler
}
EyaosRPCProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.Exception, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}

EyaosRPCProcessor.prototype.process_get_login_status = function(seqid, input, output) {
  var args = new EyaosRPC_get_login_status_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.get_login_status(args.session_id, function (err, result) {
    var result = new EyaosRPC_get_login_status_result((err != null ? err : {success: result}));
    output.writeMessageBegin("get_login_status", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

EyaosRPCProcessor.prototype.process_get_home_banners = function(seqid, input, output) {
  var args = new EyaosRPC_get_home_banners_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.get_home_banners(args.num, function (err, result) {
    var result = new EyaosRPC_get_home_banners_result((err != null ? err : {success: result}));
    output.writeMessageBegin("get_home_banners", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

EyaosRPCProcessor.prototype.process_get_new_skus = function(seqid, input, output) {
  var args = new EyaosRPC_get_new_skus_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.get_new_skus(args.num, function (err, result) {
    var result = new EyaosRPC_get_new_skus_result((err != null ? err : {success: result}));
    output.writeMessageBegin("get_new_skus", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

EyaosRPCProcessor.prototype.process_get_proxy_infos = function(seqid, input, output) {
  var args = new EyaosRPC_get_proxy_infos_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.get_proxy_infos(args.num, function (err, result) {
    var result = new EyaosRPC_get_proxy_infos_result((err != null ? err : {success: result}));
    output.writeMessageBegin("get_proxy_infos", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

EyaosRPCProcessor.prototype.process_get_good_enterprises = function(seqid, input, output) {
  var args = new EyaosRPC_get_good_enterprises_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.get_good_enterprises(args.num, function (err, result) {
    var result = new EyaosRPC_get_good_enterprises_result((err != null ? err : {success: result}));
    output.writeMessageBegin("get_good_enterprises", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

EyaosRPCProcessor.prototype.process_get_medical_messages = function(seqid, input, output) {
  var args = new EyaosRPC_get_medical_messages_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.get_medical_messages(args.num, function (err, result) {
    var result = new EyaosRPC_get_medical_messages_result((err != null ? err : {success: result}));
    output.writeMessageBegin("get_medical_messages", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

EyaosRPCProcessor.prototype.process_get_hiring_infos = function(seqid, input, output) {
  var args = new EyaosRPC_get_hiring_infos_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.get_hiring_infos(args.num, function (err, result) {
    var result = new EyaosRPC_get_hiring_infos_result((err != null ? err : {success: result}));
    output.writeMessageBegin("get_hiring_infos", Thrift.MessageType.REPLY, seqid);
    result.write(output);
    output.writeMessageEnd();
    output.flush();
  })
}

